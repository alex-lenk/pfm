@use "sass:math";

@function get-vw($target, $maxBreakpoint) {
  $vw-context: $maxBreakpoint * 0.01 * 1px;
  @return math.div($target, $vw-context) * 1vw;
}

@function calculateRem($size) {
  $remSize: $size / 16px;
  @return $remSize * 1rem;
}

//@include font-size(16px);
@mixin font-size($size) {
  font-size: calculateRem($size);
}

//@include hide-display;Альтернатива display none
@mixin hide-display() {
  position: absolute;
  overflow: hidden;
  height: 1px;
  width: 1px;
  opacity: 0;
  transition: all .2s ease-in-out-in-out;
}

@mixin visible-display() {
  opacity: 1;
  width: auto;
  height: auto;
  overflow: visible;
}

//Очиститель потоков
@mixin clearfix {
  &:after {
    display: table;
    clear: both;
    content: "";
  }
}

@mixin transition($all,$ease) {
  transition: $all .3s $ease;
  @content;
}

@mixin hidePlaceholder {
  &::-moz-placeholder {
    @content;
  }
  &:-ms-input-placeholder {
    @content;
  }
  &::-ms-input-placeholder {
    @content;
  }
  &::-webkit-input-placeholder {
    @content;
  }
}

//Truncate
@mixin truncate($truncation-boundary) {
  max-width: $truncation-boundary;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  @content;
}

@mixin stitches-sprite($x: 0, $y: 0, $width: 0, $height: 0) {
  background-position: $x $y;
  width: $width;
  height: $height;
}

//lineDecor
@mixin lineDecor($lineDecorColor) {
  position: relative;
  display: inline-block;
  &::after {
    width: 0;
    height: 1px;
    margin: 0 auto;
    display: block;
    background-color: $lineDecorColor;
    transition: width 0.4s ease;
    content: '';
  }
  &:hover::after {
    width: 100%;
  }
}
